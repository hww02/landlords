var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**This class is automatically generated by LayaAirIDE, please do not make any modifications. */


var _hall = require("./scripts/hall");

var _hall2 = _interopRequireDefault(_hall);

var _home = require("./scripts/home");

var _home2 = _interopRequireDefault(_home);

var _room = require("./scripts/room");

var _room2 = _interopRequireDefault(_room);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var GameConfig = function () {
    function GameConfig() {
        _classCallCheck(this, GameConfig);
    }

    _createClass(GameConfig, null, [{
        key: "init",
        value: function init() {
            //注册Script或者Runtime引用
            var reg = Laya.ClassUtils.regClass;
            reg("scripts/hall.js", _hall2.default);
            reg("scripts/home.js", _home2.default);
            reg("scripts/room.js", _room2.default);
        }
    }]);

    return GameConfig;
}();

exports.default = GameConfig;

GameConfig.width = 1136;
GameConfig.height = 640;
GameConfig.scaleMode = "fixedwidth";
GameConfig.screenMode = "horizontal";
GameConfig.alignV = "top";
GameConfig.alignH = "left";
GameConfig.startScene = "landlord/home.scene";
GameConfig.sceneRoot = "";
GameConfig.debug = false;
GameConfig.stat = false;
GameConfig.physicsDebug = false;
GameConfig.exportSceneToJson = true;

GameConfig.init();

},{"./scripts/hall":3,"./scripts/home":4,"./scripts/room":5}],2:[function(require,module,exports){
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _GameConfig = require("./GameConfig");

var _GameConfig2 = _interopRequireDefault(_GameConfig);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Main = function () {
	function Main() {
		_classCallCheck(this, Main);

		//根据IDE设置初始化引擎		
		if (window["Laya3D"]) Laya3D.init(_GameConfig2.default.width, _GameConfig2.default.height);else Laya.init(_GameConfig2.default.width, _GameConfig2.default.height, Laya["WebGL"]);
		Laya["Physics"] && Laya["Physics"].enable();
		Laya["DebugPanel"] && Laya["DebugPanel"].enable();
		Laya.stage.scaleMode = _GameConfig2.default.scaleMode;
		Laya.stage.screenMode = _GameConfig2.default.screenMode;
		Laya.stage.alignV = _GameConfig2.default.alignV;
		Laya.stage.alignH = _GameConfig2.default.alignH;
		//兼容微信不支持加载scene后缀场景
		Laya.URL.exportSceneToJson = _GameConfig2.default.exportSceneToJson;

		//打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
		if (_GameConfig2.default.debug || Laya.Utils.getQueryString("debug") == "true") Laya.enableDebugPanel();
		if (_GameConfig2.default.physicsDebug && Laya["PhysicsDebugDraw"]) Laya["PhysicsDebugDraw"].enable();
		if (_GameConfig2.default.stat) Laya.Stat.show();
		Laya.alertGlobalError = true;

		//激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
		Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
	}

	_createClass(Main, [{
		key: "onVersionLoaded",
		value: function onVersionLoaded() {
			//激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
			Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
		}
	}, {
		key: "onConfigLoaded",
		value: function onConfigLoaded() {
			//加载IDE指定的场景
			_GameConfig2.default.startScene && Laya.Scene.open(_GameConfig2.default.startScene);
			window.socket = Laya.Browser.window.io('http://localhost:3001');
			window.Events = Laya.Event;
		}
	}]);

	return Main;
}();
//激活启动类


new Main();

},{"./GameConfig":1}],3:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var HallScene = function (_Laya$Script) {
    _inherits(HallScene, _Laya$Script);

    function HallScene() {
        _classCallCheck(this, HallScene);

        var _this = _possibleConstructorReturn(this, (HallScene.__proto__ || Object.getPrototypeOf(HallScene)).call(this));

        _this.userData = {}; //用户信息
        return _this;
    }

    _createClass(HallScene, [{
        key: 'load',
        value: function load() {
            //Laya.loader.load("landlord/sounds/bg_room.mp3");
        }
    }, {
        key: 'onStart',
        value: function onStart() {
            var _this2 = this;

            //背景音乐
            Laya.SoundManager.playMusic('landlord/sounds/bg_room.mp3', 0, null);

            socket.emit('getUserInfo');
            socket.on('getUserInfo', function (data) {
                _this2.owner.userPhoto.skin = data.photo; //设置用户头像
                _this2.owner.labelCoin.text = data.coin; //设置金币
                _this2.owner.nickName.text = data.userName; //用户名称
                _this2.userData = data;
            });

            //请求房间列表数据
            socket.emit('roomList');
            socket.on('roomList', function (list) {
                //渲染房间列表
                _this2.owner.roomList.array = list;
                _this2.owner.roomList.renderHandler = new Laya.Handler(_this2, function (cell, index) {
                    var roomData = list[index];
                    var leftPhoto = cell.getChildByName('leftPhoto'); //左边用户Img
                    leftPhoto.skin = roomData.userLeft.photo ? roomData.userLeft.photo : ''; //头像
                    var btnLeft = cell.getChildByName('btnLeft'); //左边座位
                    btnLeft.offAll(Events.CLICK).on(Events.CLICK, _this2, function () {
                        if (leftPhoto.skin != '') {
                            alert('该座位已经有人了');
                            return false;
                        }
                        //加入房间
                        socket.emit('joinRoom', roomData.roomId, 'userLeft');
                    });

                    var rightPhoto = cell.getChildByName('rightPhoto'); //右边用户Img
                    rightPhoto.skin = roomData.userRight.photo ? roomData.userRight.photo : ''; //头像
                    var btnRight = cell.getChildByName('btnRight'); //右边座位
                    btnRight.offAll(Events.CLICK).on(Events.CLICK, _this2, function () {
                        if (rightPhoto.skin != '') {
                            alert('该座位已经有人了');
                            return false;
                        }
                        //加入房间
                        socket.emit('joinRoom', roomData.roomId, 'userRight');
                        console.log('点击右侧座位', roomData.roomId);
                    });
                    var bottomPhoto = cell.getChildByName('bottomPhoto'); //左边用户
                    bottomPhoto.skin = roomData.userBottom.photo ? roomData.userBottom.photo : ''; //头像
                    var btnBottom = cell.getChildByName('btnBottom'); //右边座位
                    btnBottom.offAll(Events.CLICK).on(Events.CLICK, _this2, function () {
                        if (bottomPhoto.skin != '') {
                            alert('该座位已经有人了');
                            return false;
                        }
                        //加入房间
                        socket.emit('joinRoom', roomData.roomId, 'userBottom');
                    });
                });
            });

            //加入房间
            socket.on('joinRoom', function (result) {
                if (result) {
                    //创建成功
                    Laya.Scene.open('./landlord/room.scene');
                }
            });

            //创建房间
            this.owner.btnCcreateRoom.on(Events.CLICK, this, function () {
                socket.emit('createRoom');
            });

            //退出登录
            this.owner.signOut.on(Events.CLICK, this, function () {
                console.log('退出按钮点击了');
                Laya.SoundManager.stopMusic();
                socket.emit('signOut');
            });
            socket.on('signOut', function (result) {
                if (result) {
                    Laya.Scene.open('./landlord/home.scene');
                }
            });
        }
    }]);

    return HallScene;
}(Laya.Script);

exports.default = HallScene;

},{}],4:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var HomeScene = function (_Laya$Script) {
    _inherits(HomeScene, _Laya$Script);

    function HomeScene() {
        _classCallCheck(this, HomeScene);

        var _this = _possibleConstructorReturn(this, (HomeScene.__proto__ || Object.getPrototypeOf(HomeScene)).call(this));

        _this.loginDialog = null; //登录弹框
        _this.btnLogin = null; //登录按钮
        _this.btnClose = null; //关闭
        _this.inpName = null; //姓名
        _this.inpNickName = null; //昵称
        _this.btnBeginGame = null; //开始游戏
        _this.headImg = ['https://cdn02.xianglin.cn/a314870cce2dab0418ddfbe9408c592b-17350.png', 'https://cdn02.xianglin.cn/68586e70ad159f947b1f05efcad581c5-23712.png', 'https://cdn02.xianglin.cn/b41a247c5b29cd4de8cef93cf7ae3ffd-20090.png', 'https://cdn02.xianglin.cn/4f1627f8b61e1b4a6926ab42c87d333e-18618.png', 'https://cdn02.xianglin.cn/b4d968c252a9cea0e668cb23db198ed0-22429.png', 'https://cdn02.xianglin.cn/c12aa0f0c200e5970e20c03946cf079a-20810.png', 'https://cdn02.xianglin.cn/f0749047a5cf4f02516a3c65602060eb-22454.png', 'https://cdn02.xianglin.cn/70a155e96b6c97defe63d876e8e99fbd-24592.png', 'https://cdn02.xianglin.cn/d783ce195a1fdbe809def6178d07c0c3-22394.png', 'https://cdn02.xianglin.cn/ffcb3f6b12566d1a7bdda114927409e8-28721.png', 'https://cdn02.xianglin.cn/ccffdec37e2820ba1729eebc74d28223-22776.png']; //用户头像
        return _this;
    }

    //渲染之后执行	


    _createClass(HomeScene, [{
        key: 'onPostRender',
        value: function onPostRender() {}
    }, {
        key: 'onStart',
        value: function onStart() {
            var _this2 = this;

            console.log(this);
            this.loginDialog = this.owner.loginDialog;
            this.btnLogin = this.owner.btnLogin;
            this.btnClose = this.owner.btnClose;
            this.inpName = this.owner.inpName;
            this.inpPsd = this.owner.inpPsd;
            this.btnBeginGame = this.owner.btnBeginGame;

            //显示登录
            this.btnLogin.on(Events.CLICK, this, function () {
                _this2.loginDialog.visible = true;
            });
            //关闭登录
            this.btnClose.on(Events.CLICK, this, function () {
                _this2.loginDialog.visible = false;
            });

            //开始游戏
            this.btnBeginGame.on(Events.CLICK, this, function () {
                var name = _this2.inpName.text;
                var inpPsd = _this2.inpPsd.text;
                if (name.trim() == '') {
                    alert('请输入姓名');
                    return false;
                }

                if (inpPsd.trim() == '') {
                    alert('请输入密码');
                    return false;
                }

                var index = Math.floor(Math.random() * (_this2.headImg.length - 1)); //头像随机索引
                var headImg = _this2.headImg[index]; //用户头像

                var data = {
                    userName: name,
                    coin: 2000,
                    photo: headImg
                };

                socket.emit('userLogin', data);
                socket.on('userLogin', function (isLgin) {
                    if (isLgin) {
                        //跳转到大厅
                        Laya.Scene.open('./landlord/hall.scene');
                    }
                });
            });
        }
    }]);

    return HomeScene;
}(Laya.Script);

exports.default = HomeScene;

},{}],5:[function(require,module,exports){
'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var RoomScene = function (_Laya$Script) {
    _inherits(RoomScene, _Laya$Script);

    function RoomScene() {
        _classCallCheck(this, RoomScene);

        var _this = _possibleConstructorReturn(this, (RoomScene.__proto__ || Object.getPrototypeOf(RoomScene)).call(this));

        _this.userData = {}; //用户信息
        _this.roomData = {}; //房间信息

        _this.cards = []; //用户的牌
        _this.isSelArr = []; //用户是否选中
        return _this;
    }

    _createClass(RoomScene, [{
        key: 'load',
        value: function load() {
            Laya.loader.load("landlord/card/role.atlas");
        }
    }, {
        key: 'onStart',
        value: function onStart() {
            var _this2 = this;

            socket.emit('getUserInfo'); //获取用户信息       
            socket.on('getUserInfo', function (data) {
                _this2.userData = data;
            });

            socket.emit('getRoomInfo'); //获取房间信息
            socket.on('getRoomInfo', function (roomData) {
                _this2.roomData = roomData;
                var data = _this2.userData;
                _this2.getUserPosi(data.posType, roomData);
            });
            //发牌成功
            socket.on('fapai', function () {
                socket.emit('getUserCards'); //请求自己的牌
                //socket.emit('jiaodizhu');//首次谁叫地主
            });
            //展示自己的牌
            socket.on('showCards', function (cards) {
                //this.isSelArr=[];//重置是否选中
                var selArr = [];
                _this2.cards = cards;
                var myCardsBox = _this2.owner.myCardsBox;
                myCardsBox.destroyChildren();

                var _loop = function _loop(i) {
                    selArr.push(false);
                    var card = new Laya.Sprite();
                    card.texture = 'cards/card_' + cards[i] + '.png';
                    card.width = 100;
                    card.height = 148;
                    card.x = (i + 1) * 40;
                    card.on(Events.CLICK, _this2, function () {

                        if (_this2.isSelArr[i]) {
                            card.y = card.y + 20;
                        } else {
                            card.y = card.y - 20;
                        }
                        _this2.isSelArr[i] = !_this2.isSelArr[i];
                    });
                    // Laya.Tween.to(card,{
                    //     x:(i + 1) * 40
                    // },800,Laya.Ease.linearIn,null);
                    myCardsBox.addChild(card);
                };

                for (var i = 0; i < cards.length; i++) {
                    _loop(i);
                }
                _this2.isSelArr = selArr;
            });

            //游戏结束
            socket.on('gameOver', function (res) {
                var dialog = _this2.owner.dialogGame;
                var userList = dialog.getChildByName('userList'); //用户列表
                userList.array = res.list;
                var list = res.list;
                var curUserData = res.curUser;
                var winDz = dialog.getChildByName('winDz'); //地主赢
                if (curUserData.role == 'nongmin') {
                    //农民
                    if (curUserData.result == 'win') {
                        //赢    
                        Laya.SoundManager.playSound('landlord/sounds/win.wav', 1, null);
                        dialog.getChildByName('winNm').visible = true;
                    } else {
                        //输
                        Laya.SoundManager.playSound('landlord/sounds/faill.wav', 1, null);
                        dialog.getChildByName('faliNm').visible = true;
                    }
                } else {
                    //地主
                    if (curUserData.result == 'win') {
                        //赢
                        Laya.SoundManager.playSound('landlord/sounds/win.wav', 1, null);
                        dialog.getChildByName('winDz').visible = true;
                    } else {
                        //输
                        dialog.getChildByName('faliDz').visible = true;
                        Laya.SoundManager.playSound('landlord/sounds/faill.wav', 1, null);
                    }
                }

                dialog.visible = true;
                userList.renderHandler = new Laya.Handler(_this2, function (cell, index) {
                    var userData = list[index];
                    var role = cell.getChildByName('role'); //角色
                    role.text = userData.role == 'nongmin' ? '农民' : '地主';
                    var nickName = cell.getChildByName('nickName'); //昵称
                    nickName.text = userData.userName;
                    var difen = cell.getChildByName('difen'); //底分
                    difen.text = userData.difen;
                    var conin = cell.getChildByName('conin'); //金币
                    conin.text = userData.winCoin;
                });
            });

            socket.on('playMusic', function (type) {
                var url = '';
                if (type == 'bujiaodizhu') {
                    url = 'landlord/sounds/bujiao.wav';
                }
                if (type == 'jiaodizhu') {
                    url = 'landlord/sounds/jiaodizhu.wav';
                }
                if (type == 'win') {
                    //胜利
                    url = 'landlord/sounds/win.wav';
                }
                if (type == 'win') {
                    //输牌
                    url = 'landlord/sounds/faill.wav';
                }
                if (type == 'fapai') {
                    //发牌
                    url = 'landlord/sounds/fapai.wav';
                }
                if (type == 'ZhaDan') {
                    var zhadanAni = _this2.owner.zhadanAni;
                    zhadanAni.visible = true;
                    zhadanAni.play(0, false, 'zhadan');
                    url = 'landlord/sounds/zhadan.wav';
                }
                if (type == 'WangZha') {
                    var wangzhaAni = _this2.owner.wangzhaAni;
                    wangzhaAni.visible = true;
                    wangzhaAni.play();
                    Laya.Tween.to(wangzhaAni, {
                        y: -274
                    }, 2000, Laya.Ease.quintOut, null);
                    url = 'landlord/sounds/wangzha.wav';
                }

                if (type == 'SanDaiYi') {
                    url = 'landlord/sounds/sandaiyi.wav';
                }

                if (type == 'DanShun') {
                    url = 'landlord/sounds/shunzi.wav';
                }

                if (type == 'DuiShun') {
                    url = 'landlord/sounds/liandui.wav';
                }

                if (type == 'SiDaiEr') {
                    url = 'landlord/sounds/sidaier.wav';
                }

                if (type == 'FeiJi' || type == 'FeiJiDaiYi' || type == 'FeiJiDaiDui') {
                    var feijiAni = _this2.owner.feijiAni;
                    feijiAni.visible = true;
                    feijiAni.play(0, false, 'feiji');

                    url = 'landlord/sounds/feiji.wav';
                }

                Laya.SoundManager.playSound(url, 1, null);
            });

            //返回大厅
            this.owner.btnBack.on(Events.CLICK, this, function () {
                socket.emit('goBackHall');
            });

            //游戏结束返回大厅        
            this.owner.btnQuite.on(Events.CLICK, this, function () {
                _this2.owner.dialogGame.visible = false;
                socket.emit('goBackHall');
            });

            //继续游戏
            this.owner.btnBegainGame.on(Events.CLICK, this, function () {
                _this2.owner.dialogGame.visible = false;
                socket.emit('continueGame');
            });

            socket.on('goBackHall', function (result) {
                if (result) {
                    Laya.Scene.open('./landlord/hall.scene');
                }
            });
        }
    }, {
        key: 'getUserPosi',
        value: function getUserPosi(posType, roomData) {

            if (roomData.bottomCards) {
                if (roomData.bottomCards.length > 0) {
                    this.owner.cardsDp.visible = false; //显示地主背面牌
                    var cardDpZheng = this.owner.cardDpZheng;
                    var cards = roomData.bottomCards;
                    cardDpZheng.destroyChildren();
                    for (var i = 0; i < cards.length; i++) {
                        var _card = new Laya.Sprite();
                        _card.texture = 'cards/card_' + cards[i] + '.png';
                        _card.width = 60;
                        _card.height = 82;
                        _card.x = i * 26;
                        cardDpZheng.addChild(_card);
                        cardDpZheng.visible = true;
                    }
                } else {
                    this.owner.cardsDp.visible = true; //显示地主背面牌
                    this.owner.cardDpZheng.visible = false;
                }
            }

            if (posType == 'userLeft') {
                //左边
                var bottomBox = this.owner.bottomBox; //下变左
                this.showRoomUser(bottomBox, roomData.userLeft, 'userBottom');

                var leftBox = this.owner.leftBox; //左变右
                this.showRoomUser(leftBox, roomData.userRight, '');

                var rightBox = this.owner.rightBox; //右变下
                this.showRoomUser(rightBox, roomData.userBottom, '');
            }
            if (posType == 'userRight') {
                //右边
                var _bottomBox = this.owner.bottomBox; //下变右
                this.showRoomUser(_bottomBox, roomData.userRight, 'userBottom');

                var _leftBox = this.owner.leftBox; //左变下
                this.showRoomUser(_leftBox, roomData.userBottom, '');

                var _rightBox = this.owner.rightBox; //右变左
                this.showRoomUser(_rightBox, roomData.userLeft, '');
            }
            if (posType == 'userBottom') {
                //下边
                var _bottomBox2 = this.owner.bottomBox; //下
                this.showRoomUser(_bottomBox2, roomData.userBottom, 'userBottom');

                var _leftBox2 = this.owner.leftBox; //左
                this.showRoomUser(_leftBox2, roomData.userLeft, '');

                var _rightBox2 = this.owner.rightBox; //右
                this.showRoomUser(_rightBox2, roomData.userRight, '');
            }
        }
    }, {
        key: 'showRoomUser',
        value: function showRoomUser(dom, data, posType) {
            var _this3 = this;

            var userPhoto = dom.getChildByName('userPhoto'); //头像
            var nickName = dom.getChildByName('nickName'); //昵称
            var coinNum = dom.getChildByName('coinNum'); //金币
            var coinIcon = dom.getChildByName('coinIcon'); //金币icon
            var imgReady = dom.getChildByName('imgReady'); //准备
            userPhoto.skin = data.photo ? data.photo : '';
            nickName.text = data.userName ? data.userName : '';
            coinNum.text = data.coin ? data.coin : '';
            coinIcon.visible = data.coin ? true : false;
            imgReady.visible = data.state == 'ready' ? true : false;

            var timeBox = dom.getChildByName('timeBox'); //timeBox
            var time = timeBox.getChildByName('time');
            timeBox.visible = data.time && data.time >= 0 ? true : false;
            time.text = data.time ? data.time : '';

            //角色
            var roleDz = dom.getChildByName('roleDz'); //地主icon
            var roleNm = dom.getChildByName('roleNm'); //农民icon
            roleDz.visible = data.role == 'dizhu' ? true : false;
            roleNm.visible = data.role == 'nongmin' ? true : false;

            var iconJdz = dom.getChildByName('iconJdz'); //叫地主
            var iconBj = dom.getChildByName('iconBj'); //不叫叫地主
            iconJdz.visible = data.state == 'jsJdz' ? true : false;
            iconBj.visible = data.state == 'bujiaodizhu' ? true : false;

            if (posType == 'userBottom') {
                //显示底部已经出的牌
                var boxShowChupai = dom.getChildByName('boxShowChupai'); //地主icon
                if (data.myPlayCards && data.myPlayCards.length > 0) {
                    var cards = data.myPlayCards;
                    boxShowChupai.destroyChildren();
                    for (var i = 0; i < cards.length; i++) {
                        var _card2 = new Laya.Sprite();
                        _card2.texture = 'cards/card_' + cards[i] + '.png';
                        _card2.width = 60;
                        _card2.height = 82;
                        _card2.x = i * 26;
                        boxShowChupai.addChild(_card2);
                    }
                    //boxShowChupai.y = boxShowChupai.y-200;
                    boxShowChupai.visible = true;
                } else {
                    boxShowChupai.visible = false;
                }

                var btnReady = dom.getChildByName('btnReady'); //准备按钮
                btnReady.visible = data.state == '' ? true : false;
                //准备
                btnReady.offAll(Events.CLICK).on(Events.CLICK, this, function () {
                    socket.emit('ready', data);
                    // let wangzhaAni = this.owner.wangzhaAni;
                    // wangzhaAni.visible = true;
                    // wangzhaAni.play();
                    // Laya.Tween.to(wangzhaAni,{
                    //     y:-274
                    // },2000,Laya.Ease.quintOut,null);
                });

                //叫地主
                var boxJdz = dom.getChildByName('boxJdz'); //叫地主box
                var btnJdz = boxJdz.getChildByName('btnJdz'); //叫地主
                var btnBjdz = boxJdz.getChildByName('btnBjdz'); //不叫地主

                boxJdz.visible = data.state == 'jiaodizhu' ? true : false;

                //叫地主
                btnJdz.offAll(Events.CLICK).on(Events.CLICK, this, function () {
                    boxJdz.visible = false;
                    socket.emit('qiangdizhu');
                });
                //不叫
                btnBjdz.offAll(Events.CLICK).on(Events.CLICK, this, function () {
                    boxJdz.visible = false;
                    socket.emit('buqiangdizhu');
                });

                //抢地主
                var boxQdz = dom.getChildByName('boxQdz'); //抢地主box
                var btnQdz = boxQdz.getChildByName('btnQdz'); //抢地主
                var btnBqdz = boxQdz.getChildByName('btnBqdz'); //不抢地主
                boxQdz.visible = data.state == 'qiangdizhu' ? true : false;
                //抢地主
                btnQdz.offAll(Events.CLICK).on(Events.CLICK, this, function () {
                    boxQdz.visible = false;
                    socket.emit('qiangdizhu');
                });
                //不抢
                btnBqdz.offAll(Events.CLICK).on(Events.CLICK, this, function () {
                    boxQdz.visible = false;
                    socket.emit('buqiangdizhu');
                });

                //出牌
                var boxChupai = dom.getChildByName('boxChupai'); //出牌box
                var btnChupai = boxChupai.getChildByName('btnChupai'); //出牌
                var btnBuchu = boxChupai.getChildByName('btnBuchu'); //不出牌
                boxChupai.visible = data.state == 'chupai' ? true : false;
                btnBuchu.visible = data.order === '1' ? false : true;
                var iconBuchu = dom.getChildByName('iconBuchu'); //不出图标
                iconBuchu.visible = data.state == 'buchu' ? true : false;
                //出牌
                btnChupai.offAll(Events.CLICK).on(Events.CLICK, this, function () {
                    //boxChupai.visible = false;
                    var cards = _this3.cards; //我所有的牌
                    var isSelArr = _this3.isSelArr; //用户是否选中
                    var newIsSel = []; //重置剩余的牌为不选中
                    var myPlayCards = []; //我要出的牌
                    for (var _i = 0; _i < isSelArr.length; _i++) {
                        if (isSelArr[_i]) {
                            myPlayCards.push(cards[_i]);
                        } else {
                            newIsSel.push(false);
                        }
                    }
                    _this3.isSelArr = newIsSel;
                    socket.emit('chupai', myPlayCards);
                });
                //不出牌
                btnBuchu.offAll(Events.CLICK).on(Events.CLICK, this, function () {
                    boxChupai.visible = false;
                    socket.emit('buchupai');
                });
            } else {
                var cardNumBox = dom.getChildByName('cardNumBox'); //牌的个数
                var cardNum = cardNumBox.getChildByName('num');
                cardNum.text = data.cardsNum == undefined || data.cardsNum == 0 ? '' : data.cardsNum;
                cardNumBox.visible = data.cardsNum == undefined || data.cardsNum == 0 ? false : true;

                var myPlayCardsBox = dom.getChildByName('myPlayCardsBox'); //我出的牌

                if (data.myPlayCards && data.myPlayCards.length > 0) {

                    var _cards = data.myPlayCards;
                    myPlayCardsBox.destroyChildren();
                    for (var _i2 = 0; _i2 < _cards.length; _i2++) {
                        var _card3 = new Laya.Sprite();
                        _card3.texture = 'cards/card_' + _cards[_i2] + '.png';
                        _card3.width = 60;
                        _card3.height = 82;
                        _card3.x = _i2 * 26;
                        myPlayCardsBox.addChild(_card3);
                    }
                    myPlayCardsBox.y = myPlayCardsBox.y;
                    myPlayCardsBox.visible = true;
                } else {
                    myPlayCardsBox.visible = false;
                }

                var _iconBuchu = dom.getChildByName('iconBuchu'); //不出
                _iconBuchu.visible = data.state == 'buchu' ? true : false;
            }
        }
    }]);

    return RoomScene;
}(Laya.Script);

exports.default = RoomScene;

},{}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
